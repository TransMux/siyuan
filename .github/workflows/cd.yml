name: CD For SiYuan

on:
  push:
    tags:
      - '*-dev*'  # ÂΩìÊé®ÈÄÅÁöÑÊ†áÁ≠æÂåπÈÖç*-dev*Êó∂Ëß¶ÂèëÔºå‰æãÂ¶Ç v3.1.10-dev6
    branches:
      - '**'  # ÁõëÂê¨ÊâÄÊúâÂàÜÊîØÁöÑÊé®ÈÄÅ
    paths-ignore:
      - '**.md'  # ÂøΩÁï•markdownÊñá‰ª∂ÁöÑÂèòÊõ¥
  workflow_dispatch:  # ÊâãÂä®Ëß¶Âèë

# ref https://docs.github.com/zh/actions/learn-github-actions/variables
env:
  repo_name: "siyuan"  # ‰ªìÂ∫ìÂêçÁß∞
  android_repo_owner: "siyuan-note"  # ÂÆâÂçìÈ°πÁõÆ‰ªìÂ∫ìÊâÄÊúâËÄÖ
  repo_owner: "siyuan-note"  # ‰ªìÂ∫ìÊâÄÊúâËÄÖ
  package_json: "app/package.json"  # package.jsonÊñá‰ª∂Ë∑ØÂæÑ
  repo_name_android: "siyuan-android"  # ÂÆâÂçìÈ°πÁõÆ‰ªìÂ∫ìÂêçÔºàËØ∑Ê†πÊçÆÂÆûÈôÖ‰ªìÂ∫ìÂêç‰øÆÊîπÔºâ
  android_gradle_build_output: "app/build-release/"  # APK ËæìÂá∫ÁõÆÂΩïÔºàÊ†πÊçÆ‰Ω†ÁöÑ Android È°πÁõÆÁªìÊûÑË∞ÉÊï¥Ôºâ
  android_gradle_build_params: "assembleOfficialAction -profile --quiet --stacktrace"  # Gradle ÊûÑÂª∫‰ªªÂä°ÔºàÂ¶ÇÈúÄÂ§öÊ∏†ÈÅìËØ∑Êîπ‰∏∫Áõ∏Â∫î‰ªªÂä°Ôºâ

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
    steps:
      - name: Check commit message
        id: check
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"build"* ]]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
          else
            echo "should-build=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-commit
    if: needs.check-commit.outputs.should-build == 'true' || github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.config.os }}  # Âú®Áü©ÈòµÈÖçÁΩÆÁöÑÊìç‰ΩúÁ≥ªÁªü‰∏äËøêË°å
    name: ${{ matrix.config.name }}  # Áü©ÈòµÈÖçÁΩÆÁöÑÂêçÁß∞
    strategy:
      matrix:
        config:
          - os: windows-latest
            name: windows build win.exe
            kernel_path: "../app/kernel/SiYuan-Kernel.exe"
            build_args_prefix: "-s -w -H=windowsgui -X"
            build_args_suffix: "Mode=prod"
            electron_args: "dist"
            goos: "windows"
            gobin: "bin"
            mingwsys: "MINGW64"
            goarch: "amd64"
            suffix: "win.exe"
          - os: windows-latest
            name: windows build android.apk
            kernel_path: "../app/kernel/SiYuan-Kernel.exe"
            build_args_prefix: "-s -w -H=windowsgui -X"
            build_args_suffix: "Mode=prod"
            electron_args: "dist"
            goos: "windows"
            gobin: "bin"
            mingwsys: "MINGW64"
            goarch: "amd64"
            suffix: "apk"

    steps:
      - uses: actions/checkout@v4  # Ê£ÄÂá∫‰ª£Á†Å
        with:
          path: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}

      - name: üî® Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up MingGW  # ËÆæÁΩÆMingGW
        uses: msys2/setup-msys2@v2
        if: "contains( matrix.config.goos, 'windows')"
        with:
          install: p7zip mingw-w64-x86_64-lua

      - name: Set up Go  # ËÆæÁΩÆGo
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/kernel/go.mod
      - run: go version

      - name: Set up goversioninfo  # ËÆæÁΩÆgoversioninfo
        run: go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo && go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo
        if: "contains( matrix.config.goos, 'windows')"
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/kernel
        env:
          GO111MODULE: on
          CGO_ENABLED: 1
          GOOS: ${{ matrix.config.goos }}
          GOPATH: ${{ github.workspace }}/go
          GOARCH: ${{ matrix.config.goarch }}

      - name: Set up Node  # ËÆæÁΩÆNode
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node pnpm  # ÂÆâË£ÖNode pnpm
        run: npm install -g pnpm
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app

      - name: Install Node Dependencies  # ÂÆâË£ÖNode‰æùËµñ
        run: pnpm install --no-frozen-lockfile
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app

      - name: Building UI  # ÊûÑÂª∫UI
        run: pnpm run build
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app

      - name: Remove Build Directory
        if: ${{ !contains(matrix.config.suffix, 'apk') }}
        uses: JesseTG/rm@v1.0.2
        with:
          path: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app/build

      - name: Remove Kernel Directory for Linux
        if: ${{ !contains(matrix.config.suffix, 'apk') }}
        uses: JesseTG/rm@v1.0.2
        with:
          path: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app/kernel-linux

      - name: Remove Kernel Directory for Windows
        if: ${{ !contains(matrix.config.suffix, 'apk') }}
        uses: JesseTG/rm@v1.0.2
        with:
          path: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app/kernel

      - name: Remove Kernel Directory for macOS
        if: ${{ !contains(matrix.config.suffix, 'apk') }}
        uses: JesseTG/rm@v1.0.2
        with:
          path: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app/kernel-darwin

      - name: Remove Kernel Directory for macOS ARM64
        if: ${{ !contains(matrix.config.suffix, 'apk') }}
        uses: JesseTG/rm@v1.0.2
        with:
          path: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app/kernel-darwin-arm64

      - name: Generate Icon Resource and Properties/Version Info For Windows  # ‰∏∫WindowsÁîüÊàêÂõæÊ†áËµÑÊ∫êÂíåÂ±ûÊÄß/ÁâàÊú¨‰ø°ÊÅØ
        if: ${{ contains(matrix.config.goos, 'windows') && !contains(matrix.config.suffix, 'apk') }}
        run: ${{ github.workspace }}\go\${{ matrix.config.gobin }}\goversioninfo -platform-specific=true -icon="resource\icon.ico" -manifest="resource\goversioninfo.exe.manifest"
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/kernel
      
      - name: Building Kernel  # ÊûÑÂª∫ÂÜÖÊ†∏
        if: ${{ !contains(matrix.config.suffix, 'apk') }}
        run: go build --tags fts5 -o "${{ matrix.config.kernel_path }}" -v -ldflags "${{ matrix.config.build_args_prefix }} github.com/${{ env.repo_owner }}/${{ env.repo_name }}/kernel/util.${{ matrix.config.build_args_suffix }}"
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/kernel
        env:
          GO111MODULE: on
          CGO_ENABLED: 1
          GOOS: ${{ matrix.config.goos }}
          GOPATH: ${{ github.workspace }}/go
          GOARCH: ${{ matrix.config.goarch }}

      - name: Building Electron App
        if: ${{ !contains(matrix.config.suffix, 'apk') }}
        run: pnpm run ${{ matrix.config.electron_args }}
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app

      - name: List build directory  # ÂàóÂá∫ÊûÑÂª∫ÁõÆÂΩï
        if: ${{ !contains(matrix.config.suffix, 'apk') }}
        run: Get-ChildItem -Recurse -Force ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app/build/
        shell: pwsh

      - name: Upload build artifact  # ‰∏ä‰º†ÊûÑÂª∫‰∫ßÁâ©
        if: ${{ !contains(matrix.config.suffix, 'apk') }}
        uses: actions/upload-artifact@v4
        with:
          name: siyuan-${{ matrix.config.suffix }}  # ‰∫ßÁâ©ÂêçÁß∞
          path: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app/build/*${{ matrix.config.suffix }}  # ‰∫ßÁâ©Ë∑ØÂæÑ

      # Android-only steps within matrix (windows runner)
      - name: Setup JDK
        if: contains(matrix.config.suffix, 'apk')
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          overwrite-settings: true

      - name: Setup Android SDK
        if: contains(matrix.config.suffix, 'apk')
        uses: android-actions/setup-android@v3.2.0

      - name: Install Android NDK
        if: contains(matrix.config.suffix, 'apk')
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25b
          add-to-path: true

      - name: Remove android Directory
        if: contains(matrix.config.suffix, 'apk')
        uses: JesseTG/rm@v1.0.2
        with:
          path: ${{ github.workspace }}/${{ env.android_repo_owner }}/${{ env.repo_name_android }}

      - name: Checkout android repo
        if: contains(matrix.config.suffix, 'apk')
        uses: actions/checkout@v4
        with:
          repository: ${{ env.android_repo_owner }}/${{ env.repo_name_android }}
          path: ${{ github.workspace }}/${{ env.android_repo_owner }}/${{ env.repo_name_android }}

      - name: Prepare android build (runs batch script)
        if: contains(matrix.config.suffix, 'apk')
        run: |
          cd ${{ github.workspace }}/${{ env.repo_owner }}/${{ env.repo_name }}
          .\.github\sillot-android-build-action.bat
        shell: pwsh

      - name: Build with Gradle
        if: contains(matrix.config.suffix, 'apk')
        working-directory: ${{ github.workspace }}/${{ env.android_repo_owner }}/${{ env.repo_name_android }}
        run: |
          chmod +x ./gradlew
          ./gradlew ${{ env.android_gradle_build_params }}

      - name: Upload Gradle profile reports to artifact
        if: contains(matrix.config.suffix, 'apk')
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: Gradle_profile_reports
          path: ${{ github.workspace }}/${{ env.android_repo_owner }}/${{ env.repo_name_android }}/build/reports/profile/

      - name: Upload unsigned APK(s) to artifact
        if: contains(matrix.config.suffix, 'apk')
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-unsigned
          path: |
            ${{ github.workspace }}/${{ env.android_repo_owner }}/${{ env.repo_name_android }}/${{ env.android_gradle_build_output }}/*.apk

      - name: Sign APK (optional)
        if: contains(matrix.config.suffix, 'apk')
        id: sign_app
        uses: noriban/sign-android-release@v5
        with:
          releaseDirectory: ${{ github.workspace }}/${{ env.android_repo_owner }}/${{ env.repo_name_android }}/${{ env.android_gradle_build_output }}
          signingKeyBase64: ${{ secrets.APK_SIGN_KEY_JKS_BASE64 }}
          alias: ${{ secrets.APK_SIGN_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.APK_SIGN_KEY_JKS_PW }}
          keyPassword: ${{ secrets.APK_SIGN_KEY_PW }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Upload signed APK(s) to artifact
        if: contains(matrix.config.suffix, 'apk') && steps.sign_app.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-signed
          path: |
            ${{ steps.sign_app.outputs.signedReleaseFile0 }}
            ${{ steps.sign_app.outputs.signedReleaseFile1 }}

      - name: Report Build Success  # Êä•ÂëäÊûÑÂª∫ÊàêÂäü
        run: |
          curl -d "SiYuan Build successful!" "${{ secrets.PUSH_SERVICE_URL }}"
        shell: bash
        continue-on-error: true

      - name: Upload logs to artifact if failure
        if: failure()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: ./**/*.log

